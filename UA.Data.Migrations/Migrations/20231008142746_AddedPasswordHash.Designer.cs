// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UA.Data;

#nullable disable

namespace UA.Data.Migrations.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20231008142746_AddedPasswordHash")]
    partial class AddedPasswordHash
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UA.Data.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Name = "User"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Super Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Support"
                        });
                });

            modelBuilder.Entity("UA.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User", null, t =>
                        {
                            t.HasCheckConstraint("CK_User_Age", "Age >= 0");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("4166924c-0ff7-4028-9b56-3c590eaeabcf"),
                            Age = 25,
                            Email = "admin@example.com",
                            Name = "admin",
                            PasswordHash = "fc063b5c2ad541510b5e178a237d975dd4bbc74acf10f03d1a1fd901be6581945d53da7ce4b42c6baa0499015d64689cf5d578f37c0106ed7c9d10564869b8b6"
                        });
                });

            modelBuilder.Entity("UA.Data.Models.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole", (string)null);

                    b.HasData(
                        new
                        {
                            RoleId = 0,
                            UserId = new Guid("4166924c-0ff7-4028-9b56-3c590eaeabcf")
                        },
                        new
                        {
                            RoleId = 1,
                            UserId = new Guid("4166924c-0ff7-4028-9b56-3c590eaeabcf")
                        },
                        new
                        {
                            RoleId = 2,
                            UserId = new Guid("4166924c-0ff7-4028-9b56-3c590eaeabcf")
                        },
                        new
                        {
                            RoleId = 3,
                            UserId = new Guid("4166924c-0ff7-4028-9b56-3c590eaeabcf")
                        });
                });

            modelBuilder.Entity("UA.Data.Models.UserRole", b =>
                {
                    b.HasOne("UA.Data.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UA.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
